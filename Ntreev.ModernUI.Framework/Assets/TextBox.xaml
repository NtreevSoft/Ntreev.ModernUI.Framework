<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <ContextMenu x:Key="TextBox_ContextMenu">
        <MenuItem Command="ApplicationCommands.Copy" />
        <MenuItem Command="ApplicationCommands.Cut" />
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBox_ContextMenu}" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                            <Setter Property="Background" Value="#FFdc000c" />
                            <Setter Property="Foreground" Value="{DynamicResource WindowBackground}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <StackPanel Orientation="Horizontal">
                        <Grid VerticalAlignment="Top">
                            <Image x:Name="image" HorizontalAlignment="Right" Source="/Ntreev.ModernUI.Framework;component/Images/exclamation.png" Margin="0 0 2 0" />
                            <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                            <nmfc:ErrorBlinker x:Name="blinker" Margin="-1" />
                        </Grid>
                        <!--<Border x:Name="errorBorder" Background="#FFdc000c" Margin="8,0,0,0"
                                    Opacity="0" CornerRadius="0"
                                    IsHitTestVisible="False"
                                    MinHeight="24" >
                            <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                       Foreground="White" Margin="8,2,8,3" TextWrapping="Wrap" VerticalAlignment="Center" />
                        </Border>-->
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                            </DataTrigger.Binding>
                            <Setter TargetName="blinker" Property="ErrorContent" Value="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=adorner}" />
                            <Setter TargetName="image" Property="ToolTip" Value="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=adorner}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type RichTextBox}}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBox_ContextMenu}" />
    </Style>

    <Style TargetType="{x:Type nmfc:HighlightTextBox}" BasedOn="{StaticResource {x:Type RichTextBox}}" />

    <Style TargetType="{x:Type nmfc:HighlightTextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Highlight" Value="{DynamicResource WindowBorder}" />
    </Style>

    <DataTemplate x:Key="DefaultWatermark_DataTemplate">
        <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
    </DataTemplate>

    <Style TargetType="{x:Type xctk:WatermarkTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}">
        <Setter Property="CaretBrush" Value="{DynamicResource WindowText}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBox_ContextMenu}" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermark_DataTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
                    <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid>
                        <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="PART_WatermarkHost"
                                          Content="{TemplateBinding Watermark}"
                                          ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="False"
                                          Margin="{TemplateBinding Padding}"
                                          Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            <Setter Property="Foreground" Value="{DynamicResource InputTextHover}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>